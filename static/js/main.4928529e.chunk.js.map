{"version":3,"sources":["res/constants.js","commons/customHooks.js","commons/cssVariables.js","components/ServiceContent.js","components/Header.js","components/Dash.js","serviceWorker.js","index.js","App.js"],"names":["device_types","services","image","title","weight","content","headerStart","header","headerDesc","ex","desc","button","MOBILE","TABLET","DESKTOP","useIsMobile","getDevice","width","windowsize","isClient","window","getSize","innerWidth","undefined","height","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","device","setDevice","size","getFontSize","getPadding","ServiceContent","props","styles","padding","fontFamily","fontSize","fontWeight","titleHighlight","borderBottom","example","textTransform","description","lineHeight","textAlign","cta","outline","border","backgroundColor","cursor","style","className","Header","window_width","window_height","row","item","getDimensions","display","flexDirection","justifyContent","zIndex","boxShadow","Dash","getGridProperties","items","grid_properties","gridTemplateColumns","gridTemplateRows","gridAutoFlow","dash","flex","overflowY","scrollbarWidth","grid","gridItemImage","backgroundSize","backgroundRepeat","backgroundPosition","transition","gridItemTitle","float","color","textShadow","ItemContent","backgroundImage","MobileItem","isContentVisible","setContentVisible","blur","setBlur","filter","position","bottom","onClick","map","rows","i","key","length","index","overflow","gridColumn","to","defaultProps","Boolean","location","hostname","match","ReactDOM","render","layout","getLayout","setLayout","useLayout","app","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4928529e.chunk.js","sourcesContent":["export const device_types = ['mobile', 'tablet', 'desktop'];\r\n\r\nexport const services = [\r\n\t[\r\n\t\t{\r\n\t\t\timage:\r\n\t\t\t\t'https://images.unsplash.com/photo-1542837336-d14bdf342f9b?ixlib=rb-1.2.1&auto=format&fit=crop&w=694&q=80',\r\n\t\t\ttitle: 'WebDev',\r\n\t\t\tweight: '1',\r\n\t\t\tcontent: {\r\n\t\t\t\theaderStart: 'We can',\r\n\t\t\t\theader: 'build a website',\r\n\t\t\t\theaderDesc: ' to boost your business.',\r\n\t\t\t\tex: 'eg. landing page, home page, blog, portfolio, resume, etc.',\r\n\t\t\t\tdesc:\r\n\t\t\t\t\t'We will build fast and scalable websites to take your business online in a timely, cost efficient way.',\r\n\t\t\t\tbutton: 'Build me a website',\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\timage:\r\n\t\t\t\t'https://images.unsplash.com/photo-1509395176047-4a66953fd231?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\r\n\t\t\ttitle: 'AppDev',\r\n\t\t\tweight: '2',\r\n\t\t\tcontent: {\r\n\t\t\t\theaderStart: 'We can',\r\n\t\t\t\theader: 'build a mobile app',\r\n\t\t\t\theaderDesc: ' to boost your business.',\r\n\t\t\t\tex: 'eg. Personal, Event, eStore, etc.',\r\n\t\t\t\tdesc:\r\n\t\t\t\t\t'We will build fast and intuitive mobile apps to get your services into the pockets of your users.',\r\n\t\t\t\tbutton: 'Build me an App',\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n\r\n\t[\r\n\t\t{\r\n\t\t\timage:\r\n\t\t\t\t'https://images.unsplash.com/photo-1547658718-1cdaa0852790?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=700&q=80',\r\n\t\t\ttitle: 'Portfolio',\r\n\t\t\tweight: '1',\r\n\t\t\tcontent: {\r\n\t\t\t\theaderStart: 'We can',\r\n\t\t\t\theader: 'build a mobile app',\r\n\t\t\t\theaderDesc: ' to boost your business.',\r\n\t\t\t\tex: 'eg. Personal, Event, eStore, etc.',\r\n\t\t\t\tdesc:\r\n\t\t\t\t\t'We will build fast and intuitive mobile apps to get you services into the pockets of your users.',\r\n\t\t\t\tbutton: 'Build me an App',\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n\r\n\t[\r\n\t\t{\r\n\t\t\timage:\r\n\t\t\t\t'https://images.unsplash.com/photo-1541506618330-7c369fc759b5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=701&q=80',\r\n\t\t\ttitle: 'Design',\r\n\t\t\tweight: '1',\r\n\t\t\tcontent: {\r\n\t\t\t\theaderStart: 'We can',\r\n\t\t\t\theader: 'design inspired graphics',\r\n\t\t\t\theaderDesc: ' to boost your business.',\r\n\t\t\t\tex:\r\n\t\t\t\t\t'eg. App UI/UX, Web UI/UX, Posters, Book Covers, Logos, Visiting Cards, Leaflets, Prospectus, etc.',\r\n\t\t\t\tdesc:\r\n\t\t\t\t\t'We will design inspired pieces of graphics to bring joy and get attention from your target usersy. All to give your brand the unique identity it deserves.',\r\n\t\t\t\tbutton: 'Build my visual brand',\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\timage:\r\n\t\t\t\t'https://images.unsplash.com/photo-1572573309811-48474d1891b7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=700&q=80',\r\n\t\t\ttitle: 'Branding',\r\n\t\t\tweight: '1',\r\n\t\t\tcontent: {\r\n\t\t\t\theaderStart: 'We can',\r\n\t\t\t\theader: 'do social media marketing',\r\n\t\t\t\theaderDesc: ' to boost your business.',\r\n\t\t\t\tex: 'eg. Facebook Pages & Groups, Instagram, Twitter, LinkedIn',\r\n\t\t\t\tdesc:\r\n\t\t\t\t\t'With our experice in designing targeted engaging experiences we will create engagement strategies and content to build your brand in a social brand',\r\n\t\t\t\tbutton: 'Build my social brand',\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n];\r\n","// Hook\r\nimport { useEffect, useState } from 'react';\r\nimport { device_types } from '../res/constants';\r\n\r\nconst [MOBILE, TABLET, DESKTOP] = [...device_types];\r\n\r\nexport function useWindowSize() {\r\n\tconst isClient = typeof window === 'object';\r\n\r\n\tfunction getSize() {\r\n\t\treturn {\r\n\t\t\twidth: isClient ? window.innerWidth : undefined,\r\n\r\n\t\t\theight: isClient ? window.innerHeight : undefined,\r\n\t\t};\r\n\t}\r\n\r\n\tconst [windowSize, setWindowSize] = useState(getSize);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isClient) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfunction handleResize() {\r\n\t\t\tsetWindowSize(getSize());\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', handleResize);\r\n\r\n\t\treturn () => window.removeEventListener('resize', handleResize);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n\treturn windowSize;\r\n}\r\n\r\nexport function useIsMobile() {\r\n\tfunction getDevice(width) {\r\n\t\tif (width <= 600) return MOBILE;\r\n\t\telse if (width <= 1025) return TABLET;\r\n\t\telse return DESKTOP;\r\n\t}\r\n\r\n\tconst windowsize = useWindowSize();\r\n\tconst [device, setDevice] = useState(() => getDevice(windowsize.width));\r\n\r\n\tuseEffect(() => {\r\n\t\tsetDevice(getDevice(windowsize.width));\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [windowsize.width]); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n\treturn { size: windowsize, device: device };\r\n}\r\n\r\nexport function useLayout() {\r\n\tfunction getLayout(device) {\r\n\t\tswitch (device) {\r\n\t\t\tcase MOBILE:\r\n\t\t\t\treturn { display: 'block' };\r\n\t\t\tcase TABLET:\r\n\t\t\tcase DESKTOP:\r\n\t\t\t\treturn { display: 'flex' };\r\n\t\t\tdefault:\r\n\t\t\t\treturn { display: 'flex' };\r\n\t\t}\r\n\t}\r\n\tconst device = useIsMobile().device;\r\n\tconst [layout, setLayout] = useState(() => getLayout(device));\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLayout(getLayout(device));\r\n\t}, [device]);\r\n\treturn layout;\r\n}\r\n\r\nexport default useIsMobile;\r\n","import { device_types } from './../res/constants';\r\n\r\nexport const primary_color = '#64ffda';\r\nexport const primary_color_dark = '#1de9b6';\r\n\r\nconst [MOBILE, TABLET, DESKTOP] = [...device_types];\r\n\r\nexport function getFontSize(device, size) {\r\n\tswitch (device) {\r\n\t\tcase MOBILE:\r\n\t\t\treturn size * 0.7;\r\n\t\tcase TABLET:\r\n\t\t\treturn size * 0.9;\r\n\t\tcase DESKTOP:\r\n\t\tdefault:\r\n\t\t\treturn size * 1;\r\n\t}\r\n}\r\n\r\nexport function getPadding(device, size) {\r\n\tswitch (device) {\r\n\t\tcase MOBILE:\r\n\t\t\treturn size * 0.5;\r\n\t\tcase TABLET:\r\n\t\t\treturn size * 0.7;\r\n\t\tcase DESKTOP:\r\n\t\tdefault:\r\n\t\t\treturn size * 1;\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport {\r\n\tgetFontSize,\r\n\tgetPadding,\r\n\tprimary_color_dark,\r\n\tprimary_color,\r\n} from './../commons/cssVariables';\r\n\r\nexport default function ServiceContent(props) {\r\n\tconst [content, device] = [props.content, props.device];\r\n\r\n\tconst styles = {\r\n\t\tcontent: {\r\n\t\t\tpadding: `${getPadding(device, 4)}rem`,\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tfontFamily: 'Quicksand, sans-serif',\r\n\t\t\tfontSize: '2rem',\r\n\t\t\tfontWeight: '500',\r\n\t\t},\r\n\t\ttitleHighlight: {\r\n\t\t\tborderBottom: `0.3rem solid ${primary_color_dark}`,\r\n\t\t},\r\n\t\texample: {\r\n\t\t\tfontFamily: 'Darker Grotesque, sans-serif',\r\n\t\t\ttextTransform: 'uppercase',\r\n\t\t},\r\n\t\tdescription: {\r\n\t\t\tfontFamily: 'Darker Grotesque, sans-serif',\r\n\t\t\tfontSize: '1.6rem',\r\n\t\t\tfontWeight: '400',\r\n\t\t\tlineHeight: '2.3rem',\r\n\t\t\ttextAlign: 'justify',\r\n\t\t},\r\n\t\tcta: {\r\n\t\t\twidth: 'max-content',\r\n\t\t\tpadding: '1rem',\r\n\t\t\toutline: 'none',\r\n\t\t\tborder: 'none',\r\n\t\t\tfontSize: '1rem',\r\n\t\t\tbackgroundColor: `${primary_color}`,\r\n\t\t\tcursor: 'pointer',\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={styles.content}>\r\n\t\t\t<h3 style={styles.title}>\r\n\t\t\t\t{content.headerStart} <span style={styles.titleHighlight}>{content.header}</span>{' '}\r\n\t\t\t\t{content.headerDesc}\r\n\t\t\t</h3>\r\n\t\t\t<p style={styles.example}>{content.ex}</p>\r\n\t\t\t<p style={styles.description}>{content.desc}</p>\r\n\t\t\t<button className='hover-shadow' style={styles.cta}>\r\n\t\t\t\t{content.button}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { device_types, services } from './../res/constants';\r\n//import { primary_color, primary_color_dark, getPadding } from './../commons/cssVariables';\r\nimport ServiceContent from './ServiceContent';\r\n\r\nexport default function Header(props) {\r\n\tconst [MOBILE, TABLET, DESKTOP] = [...device_types];\r\n\tconst device = props.device;\r\n\tconst [window_width, window_height] = [props.size.width, props.size.height];\r\n\tconst home = {\r\n\t\theaderStart: 'Hi there! We can offer you',\r\n\t\theader: 'solutions for branding and tech',\r\n\t\theaderDesc: 'to Boost your Business',\r\n\t\tdesc: 'Home desc',\r\n\t\tex: '',\r\n\t\tbutton: \"Let's Talk\",\r\n\t};\r\n\tconst content =\r\n\t\tprops.row && props.item === 'false' ? home : services[props.row][props.item].content;\r\n\r\n\tfunction getDimensions() {\r\n\t\tswitch (device) {\r\n\t\t\tcase MOBILE:\r\n\t\t\t\treturn ['100%', window_height];\r\n\t\t\tcase TABLET:\r\n\t\t\t\treturn [window_width / 3, '100%'];\r\n\t\t\tcase DESKTOP:\r\n\t\t\t\treturn [window_width / 4, '100%'];\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\tconst [width, height] = getDimensions();\r\n\tconst styles = {\r\n\t\theader: {\r\n\t\t\twidth: width,\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tbackgroundColor: '#fafafa',\r\n\t\t\theight: height,\r\n\t\t\tzIndex: '200',\r\n\t\t\tboxShadow: '0.3rem 0.3rem 1rem gray',\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={styles.header}>\r\n\t\t\t<h1 className='logo-font'>ChipMonk Studios</h1>\r\n\t\t\t<ServiceContent device={device} content={content} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nHeader.propTypes = {\r\n\trow: PropTypes.string,\r\n\titem: PropTypes.string,\r\n};\r\n\r\nHeader.defaultProps = { row: 'false', item: 'false' };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from '@reach/router';\r\nimport PropTypes from 'prop-types';\r\nimport { device_types, services } from '../res/constants';\r\nimport { getFontSize } from '../commons/cssVariables';\r\nimport ServiceContent from './ServiceContent';\r\n\r\nexport default function Dash(props) {\r\n\tconst [MOBILE, TABLET, DESKTOP] = [...device_types];\r\n\tconst device = props.device;\r\n\tconst [window_width, window_height] = [props.size.width, props.size.height];\r\n\r\n\tfunction getGridProperties(items) {\r\n\t\tconst grid_properties = {\r\n\t\t\tdisplay: 'grid',\r\n\t\t};\r\n\t\tswitch (device) {\r\n\t\t\tcase MOBILE:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...grid_properties,\r\n\t\t\t\t\tgridTemplateColumns: `repeat(auto-fit, minmax(${window_width}px, 1fr))`,\r\n\t\t\t\t\tgridTemplateRows: `repeat(${items}, minmax(${window_height}px, 1fr))`,\r\n\t\t\t\t};\r\n\t\t\tcase TABLET:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...grid_properties,\r\n\t\t\t\t\tgridTemplateColumns: `repeat(auto-fill, minmax(1fr, 1fr))`,\r\n\t\t\t\t\tgridAutoFlow: 'column',\r\n\t\t\t\t\tgridTemplateRows: `repeat(1, minmax(${window_height / 2}px, 1fr))`,\r\n\t\t\t\t};\r\n\t\t\tcase DESKTOP:\r\n\t\t\tdefault:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...grid_properties,\r\n\t\t\t\t\tgridTemplateColumns: `repeat(auto-fit, minmax(300px, 1fr))`,\r\n\t\t\t\t\tgridTemplateRows: `repeat(1, minmax(${window_height / 1.5}px, 1fr))`,\r\n\t\t\t\t};\r\n\t\t}\r\n\t}\r\n\tlet styles = {\r\n\t\tdash: { flex: 1, overflowY: 'scroll', scrollbarWidth: 'none' },\r\n\t\tgrid: {},\r\n\t\tgridItemImage: {\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t\tbackgroundSize: 'cover',\r\n\t\t\tbackgroundRepeat: 'no-repeat',\r\n\t\t\tbackgroundPosition: 'center',\r\n\t\t\ttransition: 'all 0.5s',\r\n\t\t},\r\n\t\tgridItemTitle: {\r\n\t\t\tfloat: 'right',\r\n\t\t\tfontFamily: 'Almarai, sans-serif',\r\n\t\t\tfontWeight: 800,\r\n\t\t\tcolor: 'white',\r\n\t\t\tfontSize: `${getFontSize(device, 3)}rem`,\r\n\t\t\ttextShadow: '0.1rem 0.1rem 0.3rem #212121',\r\n\t\t\ttransition: 'all 0.5s',\r\n\t\t},\r\n\t};\r\n\r\n\tconst ItemContent = (props) => {\r\n\t\tconst [title, image] = [props.title, props.image];\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName='zoom-on-hover'\r\n\t\t\t\tstyle={{ ...styles.gridItemImage, backgroundImage: `url(${image})` }}>\r\n\t\t\t\t<span style={styles.gridItemTitle}>{title}</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst MobileItem = (props) => {\r\n\t\tconst [title, image, content] = [props.title, props.image, props.content];\r\n\t\tconst [isContentVisible, setContentVisible] = useState(false);\r\n\t\tconst [blur, setBlur] = useState('0px');\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tisContentVisible ? setBlur('5px') : setBlur('0px');\r\n\t\t}, [isContentVisible]);\r\n\r\n\t\treturn !isContentVisible ? (\r\n\t\t\t<div\r\n\t\t\t\tclassName='zoom-on-hover'\r\n\t\t\t\tonClick={() => setContentVisible(true)}\r\n\t\t\t\tstyle={{ ...styles.gridItemImage, backgroundImage: `url(${image})` }}>\r\n\t\t\t\t<span style={styles.gridItemTitle}>{title}</span>{' '}\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='zoom-on-hover'\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t...styles.gridItemImage,\r\n\t\t\t\t\t\tbackgroundImage: `url(${image})`,\r\n\t\t\t\t\t\tfilter: `blur(${blur})`,\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ position: 'relative' }}>\r\n\t\t\t\t\t<div style={{ height: '100vh', position: 'absolute', bottom: '2px' }}>\r\n\t\t\t\t\t\t<ServiceContent device={device} content={content} />{' '}\r\n\t\t\t\t\t\t<button style={{ zIndex: '200' }} onClick={() => setContentVisible(false)}>\r\n\t\t\t\t\t\t\tclose\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\tItemContent.propTypes = {\r\n\t\ttitle: PropTypes.string,\r\n\t\timage: PropTypes.string,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={styles.dash}>\r\n\t\t\t{services.map((rows, i) => (\r\n\t\t\t\t<div key={i} style={getGridProperties(rows.length)}>\r\n\t\t\t\t\t{rows.map((item, index) => (\r\n\t\t\t\t\t\t<div key={index} style={{ overflow: 'hidden', gridColumn: `span ${item.weight}` }}>\r\n\t\t\t\t\t\t\t{device === MOBILE ? (\r\n\t\t\t\t\t\t\t\t<MobileItem image={item.image} title={item.title} content={item.content} />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Link to={`/${i}/${index}/${item.title}`}>\r\n\t\t\t\t\t\t\t\t\t<ItemContent image={item.image} title={item.title} />\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nDash.propTypes = {\r\n\tdevice: PropTypes.string.isRequired,\r\n\tsize: PropTypes.object.isRequired,\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Router } from '@reach/router';\n//import logo from './logo.svg';\nimport './App.css';\n\nimport { useIsMobile, useLayout } from './commons/customHooks';\nimport Header from './components/Header';\nimport Dash from './components/Dash';\n\nexport default function App() {\n\tconst display = useIsMobile();\n\tconst size = display.size;\n\tconst device = display.device;\n\n\tconst layout = useLayout();\n\n\tconst styles = {\n\t\tapp: { ...layout, height: size.height },\n\t};\n\n\t/*const Home = (props) => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header device={device} size={size} />\n\t\t\t</div>\n\t\t);\n\t};*/\n\n\treturn (\n\t\t<div style={styles.app}>\n\t\t\t<Router>\n\t\t\t\t<Header path='/:row/:item/:data' device={device} size={size} />\n\t\t\t\t<Header path='/*' device={device} size={size} />\n\t\t\t</Router>\n\t\t\t<Dash device={device} size={size} />\n\t\t</div>\n\t);\n}\n"],"sourceRoot":""}